version: "3.7"

volumes:

  pgdata: # Database Persistance Volume

  # Volumes for the SonarQube reports
  sonarqube_conf:
  sonarqube_data:
  sonarqube_extensions:

services:

  # PostgreSQL Database instance
  database:
    image: postgres:9.6.15-alpine
    container_name: "aerarium_database"
    restart: always
    environment:
      - POSTGRES_DB=aerarium
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=BigPassword_123
    ports:
      #- 5432:5432
      - 5433:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./AerariumDatabase/init.sql:/docker-entrypoint-initdb.d/init.sql
  
  # Application Container Instance
  backend: 
    container_name: "aerarium_backend"
    restart: always
    build: 
      context: ./AerariumBackend
      dockerfile: Dockerfile
      args:
        VERSION: 1
        JAR_PATH: /build/libs/AerariumBackend.jar
    environment:
      - APP_ADMIN_USER=admin
    depends_on:
      - database
    ports:
      - 8080:8080

  # Database Management Tool
  pgadmin:
    image: dpage/pgadmin4
    container_name: "aerarium_pgadmin"
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin"
      PGADMIN_DEFAULT_PASSWORD: "admin"
    ports:
      - "16543:80"
    depends_on:
      - database

  # Code quality inspector tool
  sonarqube:
    image: sonarqube:7.9.1-community
    container_name: aerarium_sonarqube
    environment:
      #- SONARQUBE_JDBC_URL=jdbc:postgresql://localhost:5432/sonar # For local installation
      #- SONARQUBE_JDBC_URL=jdbc:postgresql://localhost:5433/sonar # For container connection
      - SONARQUBE_JDBC_URL=jdbc:postgresql://database:5432/sonar # For compose environment 
      - SONARQUBE_JDBC_USERNAME=postgres
      - SONARQUBE_JDBC_PASSWORD=BigPassword_123
    depends_on:
      - database
    ports:
      - 9000:9000
      - 9092:9092
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions